useDotenv: true
service: demo-data-residency-api
frameworkVersion: '3'

plugins:
#  - serverless-plugin-warmup

custom:
  warmup:
    officeHoursWarmer:
      roleName: demo-data-residency-api-dev-${env:AWS_REGION,opt:region}-warmer
      enabled: true
      events:
        - schedule: cron(0/1 0-23 ? * MON-SUN *)
      concurrency: 6
      verbose: false
      logRetentionInDays: 7

provider:
  name: aws
  endpointType: REGIONAL
  apiGateway:
    metrics: true
  tracing:
    lambda: true
    apiGateway: true
  runtime: nodejs18.x
  environment:
    DATABASE_URL: ${env:DATABASE_URL}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - lambda:InvokeAsync
            - lambda:InvokeFunction
          Resource: '*'

functions:
  api:
    handler: v1/index.handler
    memorySize: 128
    timeout: 30
    maximumEventAge: 7200
    maximumRetryAttempts: 1
    events:
      - http:
          cors: true
          path: /
          method: GET
  gallery:
    handler: v1/gallery.handler
    memorySize: 128
    timeout: 30
    maximumEventAge: 7200
    maximumRetryAttempts: 1
    events:
      - http:
          cors: true
          path: /gallery
          method: GET
      - schedule:
          name: gallery-warmer
          rate: rate(5 minutes)
          enabled: true
          input:
            warmer: true
            concurrency: 1
  user:
    handler: v1/user.handler
    memorySize: 128
    timeout: 30
    maximumEventAge: 7200
    maximumRetryAttempts: 1
    events:
      - http:
          cors: true
          path: /user
          method: POST
      - schedule:
          name: user-warmer
          rate: rate(5 minutes)
          enabled: true
          input:
            warmer: true
            concurrency: 1
  artlocal:
    handler: v1/artlocal.handler
    memorySize: 128
    timeout: 30
    maximumEventAge: 7200
    maximumRetryAttempts: 1
    events:
      - http:
          cors: true
          path: /artlocal
          method: POST
      - schedule:
          name: artlocal-warmer
          rate: rate(5 minutes)
          enabled: true
          input:
            warmer: true
            concurrency: 1
  artglobal:
    handler: v1/artglobal.handler
    memorySize: 128
    timeout: 30
    maximumEventAge: 7200
    maximumRetryAttempts: 1
    events:
      - http:
          cors: true
          path: /artglobal
          method: POST
      - schedule:
          name: artglobal-warmer
          rate: rate(5 minutes)
          enabled: true
          input:
            warmer: true
            concurrency: 1
  artuser:
    handler: v1/artuser.handler
    memorySize: 128
    timeout: 30
    maximumEventAge: 7200
    maximumRetryAttempts: 1
    events:
      - http:
          cors: true
          path: /artuser
          method: POST
      - schedule:
          name: artuser-warmer
          rate: rate(5 minutes)
          enabled: true
          input:
            warmer: true
            concurrency: 1
